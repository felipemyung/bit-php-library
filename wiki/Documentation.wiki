#summary This is the documentation for the BIT API Class

= Introduction =

The class is very simple and easy to use which you can start making calls to the API for Bandsintown.

= Details =

BIT PHP Library provides the user to make 3 calls to the Bandsintown API engine:
  # Artist Information Search
  # Single Artist Search
  # Event Search (for multiple artists and location)

Let's take an example of a simple artist event search using the BIT PHP Library.

  1 Include the BIT.php in your source
{{{ 
    include ("BIT.php");
}}}

  2 Create an instance and Set your API key for the Instance. Please note that Bandsintown doesn't have an API Signup process - so you can use string value for your API key.
{{{
    $myBIT = new BIT();
    $myBIT->setAPI("APIKEYHERE");
}}}

 3 Perform the single artist events search API
{{{
    try
    {
       // set the Artist that you want to search. Make sure you leave it plain text - do not do any URL encoding. The class file will take care of that for you.
	$artists = "Angels and Airwaves";
		
	// perform the get Artist function
	$results = $x->getEventsForSingleArtist($artists);
		
	// loop through the response
	foreach($results as $events)
	{
	   $dateofevent = date("m/d/y H:i", strtotime($events->datetime));
	   $venue_city = $events->venue->city;
	   $venue_region = $events->venue->region;
	   $venue_name = $events->venue->name;
	
           // display the results of the entry		
	   echo $venue_name . " (" . $venue_city . "," . $venue_name . ") on " . $dateofevent . "<br>";
        }
    }
    catch(Exception $e)
    {
        // If you have an error from the request - it will be displayed here.
	echo $e->getMessage();
    }

}}}

It's that simple! Please refer to the examples.php for more on how you can you perform other calls with this library.

DISCLAIMER: This code is open source. That means in plain in English that I cannot guarantee the effectiveness of the code and that is production ready. Product is provided AS-IS and no warranties are in effect. If you encounter any issues - please use the bug tracker and or send me a message on twitter (http://twitter.com/gregavola) and I'll be quick to reply.

Thanks for using BIT PHP Library!
